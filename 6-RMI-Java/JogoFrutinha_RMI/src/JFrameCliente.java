
import java.awt.Button;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class JFrameCliente extends javax.swing.JFrame {

    /**
     * Creates new form JFrameCliente
     */
    public JFrameCliente() throws RemoteException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_jogador = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_apelido = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_jogador.setText("@");
        jButton_jogador.setActionCommand("");
        jButton_jogador.setEnabled(false);
        jButton_jogador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_jogadorKeyPressed(evt);
            }
        });

        jMenu1.setText("Arquivo");

        jMenuItem_apelido.setText("Conectar");
        jMenuItem_apelido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_apelidoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_apelido);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(416, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_apelidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_apelidoActionPerformed
        
        this.apelido = JOptionPane.showInputDialog(this,"Informe seu apelido....");
        this.servidor = JOptionPane.showInputDialog(this, "Informe o endereço do servidor....");
        
        if (servidor.isEmpty() || apelido.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Alguns dos campos podem estar em branco");
        } else {
            jogador = new Componente(this.apelido, jButton_jogador.getBounds().x, jButton_jogador.getBounds().y,
                                     jButton_jogador.getBounds().width, jButton_jogador.getBounds().height);
            try {
                comunicador = (IComunica) Naming.lookup("rmi://" + servidor + "/Comunica");
                
                try {
                    if (!comunicador.enviarJogador(jogador)) {
                        JOptionPane.showMessageDialog(this, "Este apelido já existe!! Escolha outro!");
                        return;
                    }
                    JOptionPane.showMessageDialog(this, "Cliente conectou com servidor....");
                    jButton_jogador.setEnabled(true);
                    jButton_jogador.requestFocus();
                    jButton_jogador.setText(apelido);
                    jogador = new Componente(apelido, jButton_jogador.getBounds().x, jButton_jogador.getBounds().y, jButton_jogador.getBounds().width,
                           jButton_jogador.getBounds().height);
                 } catch (RemoteException  ex) {
                     System.out.println("tentou enviar um jogador/botão, mas deu pau...." + ex.getMessage());
                }
                
                
                new Thread() {
                    public void run() {
                        Componente c;
                        do {
                            try {
                                listaJogadores.clear();
                                listaJogadores.addAll( comunicador.receberPosicoesJogadores() );
                                for (Iterator<Componente> i = listaJogadores.iterator(); i.hasNext();) {
                                    if (!i.next().apelido.equals(jogador.apelido)) {
                                        //testar se o componente já tem um botão na interface gráfica
                                        //se o componente já foi instanciado na forma de botão, só movimenta
                                        
                                        
                                        //senão instancia o componente como botão (dá visibilidade)
                                    }
                                }
//                                Thread.sleep(2000);
                            } catch (RemoteException ex) {
                                Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }while (true);
                    }
                }.start();
                
                
            } catch (MalformedURLException | NotBoundException |  RemoteException e ) {
                JOptionPane.showMessageDialog(null, "Um erro aconteceu na conexão com o servidor");
            }
        }
    }//GEN-LAST:event_jMenuItem_apelidoActionPerformed

    private void jButton_jogadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_jogadorKeyPressed
        // TODO add your handling code here:
        
        switch (evt.getKeyCode()) {
            case 37:
                Movimenta.irEsquerda(jButton_jogador);
                break;
            case 38:
                //System.out.println("indo para cima");
                Movimenta.irCima(jButton_jogador);
                break;
            case 39:
                //System.out.println("indo para direita");
                Movimenta.irDireita(jButton_jogador, this.getBounds().width);
                break;
            case 40:
                //System.out.println("indo para baixo");
                Movimenta.irBaixo(jButton_jogador, this.getBounds().height);
                break;
            default:
        }
        
        jogador.x = jButton_jogador.getBounds().x;
        jogador.y = jButton_jogador.getBounds().y;
                
        new Thread() {
            public void run() {
                try {
                    comunicador.atualizarPosicaoJogador(jogador);
                 } catch (RemoteException  ex) {
                     System.out.println("tentou movimentar o jogador e enviar ao servidor, mas deu pau...." + ex.getMessage());
                }
            }
        }.start();
       
    }//GEN-LAST:event_jButton_jogadorKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameCliente().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    IComunica comunicador;
    String servidor;
    String apelido;
    LinkedList<Componente> listaJogadores;
    Componente jogador;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_jogador;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_apelido;
    // End of variables declaration//GEN-END:variables
}
