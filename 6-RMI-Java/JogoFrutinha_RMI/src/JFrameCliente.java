
import java.awt.Button;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alexandrezamberlan
 */
public class JFrameCliente extends javax.swing.JFrame {

    /**
     * Creates new form JFrameCliente
     */
    public JFrameCliente() throws RemoteException {
        initComponents();
        conecta();
    }
    
    private void conecta() {
        servidor = JOptionPane.showInputDialog(null,"Endereço do servidor?");
        apelido = JOptionPane.showInputDialog(null,"Qual seu apelido?");
        
        if (servidor.isEmpty() || apelido.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Alguns dos campos podem estar em branco");
        } else {
            try {
                comunicador = (IComunica) Naming.lookup("rmi://" + servidor + "/Chat");
                //jTextArea_Mensagens.append("Realizando conexão com o servidor...sucesso\n\n");
                
                new Thread() {
                    public void run() {
                        do {
                            try {
                                //se a lista local ao cliente for menor que a do servidor... 
                                //entao atualizar a lista local e o jTextArea_Mensagens
                                if (comunicador.receber().size() > listaBotoesAdversarios.size()) {
                                    
                                    listaBotoesAdversarios.clear();
                                    for (Iterator<Button> iterator = comunicador.receber().iterator(); iterator.hasNext();) {
                                        Button b = iterator.next();
                                        b.setBounds(WIDTH, WIDTH, WIDTH, HEIGHT);
                                        //jTextArea_Mensagens.append(f + "\n");
                                        listaBotoesAdversarios.add(b);
                                    }
                                }
                                Thread.sleep(2000);
                            } catch (RemoteException ex) {
                                Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            
                        }while (true);
                    }
                }.start();
                
            } catch (MalformedURLException | NotBoundException |  RemoteException e ) {
                JOptionPane.showMessageDialog(null, "Um erro aconteceu na conexão com o servidor");
            }
        }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_jogador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_jogador.setText("@");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(329, 329, 329)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(458, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(253, 253, 253)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(314, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameCliente().setVisible(true);
                } catch (RemoteException ex) {
                    Logger.getLogger(JFrameCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    IComunica comunicador;
    String servidor;
    String apelido;
    LinkedList<Button> listaBotoesAdversarios;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_jogador;
    // End of variables declaration//GEN-END:variables
}
