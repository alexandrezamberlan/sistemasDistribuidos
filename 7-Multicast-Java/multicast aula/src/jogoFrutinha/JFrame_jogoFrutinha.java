package jogoFrutinha;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class JFrame_jogoFrutinha extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_jogoFrutinha
     */
    public JFrame_jogoFrutinha() {
        initComponents();
        jButton_jogador.setVisible(false);
    }
    InetAddress group;
    MulticastSocket s;
    ComunicadorUDP com = new ComunicadorUDP();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_ServidorIP = new javax.swing.JLabel();
        jTextField_ServidorIP = new javax.swing.JTextField();
        jTextField_Porta = new javax.swing.JTextField();
        jLabel_Porta = new javax.swing.JLabel();
        jLabel_Nick = new javax.swing.JLabel();
        jTextField_Apelido = new javax.swing.JTextField();
        jButton_Conectar = new javax.swing.JButton();
        jPanel_fundo = new javax.swing.JPanel();
        jButton_jogador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel_ServidorIP.setText("Servidor IP:");

        jTextField_ServidorIP.setText("224.0.0.1");

        jTextField_Porta.setText("3456");

        jLabel_Porta.setText("Porta");

        jLabel_Nick.setText("Apelido");

        jButton_Conectar.setText("Conectar");
        jButton_Conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ConectarActionPerformed(evt);
            }
        });

        jPanel_fundo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton_jogador.setFocusable(false);
        jButton_jogador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton_jogadorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_fundoLayout = new javax.swing.GroupLayout(jPanel_fundo);
        jPanel_fundo.setLayout(jPanel_fundoLayout);
        jPanel_fundoLayout.setHorizontalGroup(
            jPanel_fundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_fundoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(288, 288, 288))
        );
        jPanel_fundoLayout.setVerticalGroup(
            jPanel_fundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_fundoLayout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jButton_jogador, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_ServidorIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_ServidorIP, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Porta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Porta, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_Nick)
                        .addGap(2, 2, 2)
                        .addComponent(jTextField_Apelido, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115)
                        .addComponent(jButton_Conectar)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_ServidorIP)
                    .addComponent(jTextField_ServidorIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Nick)
                    .addComponent(jTextField_Apelido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Conectar)
                    .addComponent(jLabel_Porta)
                    .addComponent(jTextField_Porta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class ThreadReceptora extends Thread {
        public void run() {
            while (true) {
                try {
                    DatagramPacket pacote = com.recebeComponente(s);
                    System.out.println(pacote.toString());
                    System.out.println("Chegou informações de um componente... precisamos redesenha-lo no frame");
                    //Componente c = new Com(pacote.getData(), 0, pacote.getLength());
//                    lista.add(msgRecebida);
//                    Iterator i = lista.iterator();
//                    jTextArea_Mensagens.setText("");
//                    while (i.hasNext()) {
//                        jTextArea_Mensagens.append(i.next().toString() + "\n");
//                    }
                } catch (Exception e) {
                    System.out.println("Error: " + e);
                }
            }
        }
    }


    private void jButton_ConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ConectarActionPerformed
        
        try {
            if (jTextField_Apelido.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Preencha seu apelido");
            } else {
                jButton_jogador.setVisible(true);
                Movimenta.posicionaAleatorio(jButton_jogador, jPanel_fundo.getWidth(), jPanel_fundo.getHeight());
                jButton_jogador.setText(jTextField_Apelido.getText());
                jButton_jogador.setFocusable(true);
                jButton_jogador.requestFocus();

                //DEFINO O IP DO GRUPO
                String servidor = jTextField_ServidorIP.getText();
                int porta = Integer.parseInt(jTextField_Porta.getText()); 
                System.out.println(servidor + ":" + porta);
                
                group = InetAddress.getByName(servidor);
                //CRIO O SOCKET MULTICAST COM A PORTA ESPECIFICADA
                s = new MulticastSocket(porta);
                
                //ENTRA NO GRUPO MULTICAST PARA RECEBER AS MENSAGENS
                s.joinGroup(group);
                
                //CRIO A THREAD PARA RECEBER AS MENSAGENS
                ThreadReceptora tR = new ThreadReceptora();
                tR.start();
                //JOptionPane.showMessageDialog(null, "Conectado com sucesso!");
                jButton_Conectar.setEnabled(false);
                jTextField_Apelido.setEnabled(false);

                //mandando a posição atual do jogador a todos os integrantes do grupo
                Componente jogador = new Componente(jButton_jogador.getText(), jButton_jogador.getWidth(), jButton_jogador.getHeight());
                DatagramPacket pacote = com.montaComponente(jogador, jTextField_ServidorIP.getText(), Integer.parseInt(jTextField_Porta.getText()));
                s.send(pacote);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro na conexão");
            jButton_jogador.requestFocus();
        }
    }//GEN-LAST:event_jButton_ConectarActionPerformed

    private void jButton_jogadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton_jogadorKeyPressed
        // TODO add your handling code here:

        switch (evt.getKeyCode()) {
            case 37:
                //System.out.println("indo para esquerda");
                Movimenta.irEsquerda(jButton_jogador);
                break;
            case 38:
                //System.out.println("indo para cima");
                Movimenta.irCima(jButton_jogador);
                break;
            case 39:
                //System.out.println("indo para direita");
                Movimenta.irDireita(jButton_jogador, jPanel_fundo.getBounds().width);
                break;
            case 40:
                //System.out.println("indo para baixo");
                Movimenta.irBaixo(jButton_jogador, jPanel_fundo.getBounds().height);
                break;
        }

        //mandando a posição atual do jogador a todos os integrantes do grupo
        Componente jogador = new Componente(jButton_jogador.getText(), jButton_jogador.getWidth(), jButton_jogador.getHeight());
        DatagramPacket pacote = com.montaComponente(jogador, jTextField_ServidorIP.getText(), Integer.parseInt(jTextField_Porta.getText()));
        try {
            s.send(pacote);
        } catch (IOException ex) {
            Logger.getLogger(JFrame_jogoFrutinha.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_jogadorKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_jogoFrutinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_jogoFrutinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_jogoFrutinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_jogoFrutinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_jogoFrutinha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Conectar;
    private javax.swing.JButton jButton_jogador;
    private javax.swing.JLabel jLabel_Nick;
    private javax.swing.JLabel jLabel_Porta;
    private javax.swing.JLabel jLabel_ServidorIP;
    private javax.swing.JPanel jPanel_fundo;
    private javax.swing.JTextField jTextField_Apelido;
    private javax.swing.JTextField jTextField_Porta;
    private javax.swing.JTextField jTextField_ServidorIP;
    // End of variables declaration//GEN-END:variables
}
